---------- Linear ----------
params, R2(train), R2(test)
outer CV R2(train): 0.790, R2(test): 0.544
outer CV R2(train): 0.814, R2(test): 0.438
outer CV R2(train): 0.768, R2(test): 0.633
outer CV R2(train): 0.747, R2(test): 0.679
outer CV R2(train): 0.804, R2(test): 0.536
outer CV R2(train): 0.804, R2(test): 0.523
outer CV R2(train): 0.759, R2(test): 0.631
outer CV R2(train): 0.794, R2(test): 0.538
outer CV R2(train): 0.809, R2(test): 0.445
outer CV R2(train): 0.763, R2(test): 0.565
outer CV R2(train): 0.792, R2(test): 0.503
outer CV R2(train): 0.826, R2(test): 0.473
outer CV R2(train): 0.815, R2(test): 0.460
outer CV R2(train): 0.792, R2(test): 0.475
outer CV R2(train): 0.803, R2(test): 0.237
outer CV R2(train): 0.779, R2(test): 0.515
outer CV R2(train): 0.780, R2(test): 0.511
outer CV R2(train): 0.809, R2(test): 0.452
outer CV R2(train): 0.819, R2(test): 0.439
outer CV R2(train): 0.765, R2(test): 0.584
outer CV R2(train): 0.787, R2(test): 0.522
outer CV R2(train): 0.774, R2(test): 0.614
outer CV R2(train): 0.794, R2(test): 0.553
outer CV R2(train): 0.790, R2(test): 0.573
outer CV R2(train): 0.814, R2(test): 0.495
outer CV R2(train): 0.821, R2(test): 0.310
outer CV R2(train): 0.772, R2(test): 0.554
outer CV R2(train): 0.746, R2(test): 0.695
outer CV R2(train): 0.766, R2(test): 0.688
outer CV R2(train): 0.825, R2(test): 0.513
[Linear] total result = R2(train): 0.791, R2(test): 0.523
---------- Lasso ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.538, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.714, R2(test): 0.594
inner CV: R2(test): 0.549, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.731, R2(test): 0.424
inner CV: R2(test): 0.472, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.705, R2(test): 0.521
inner CV: R2(test): 0.399, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.672, R2(test): 0.712
inner CV: R2(test): 0.550, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.727, R2(test): 0.510
inner CV: R2(test): 0.593, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.741, R2(test): 0.469
inner CV: R2(test): 0.417, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.664, R2(test): 0.693
inner CV: R2(test): 0.486, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.724, R2(test): 0.573
inner CV: R2(test): 0.518, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.739, R2(test): 0.519
inner CV: R2(test): 0.436, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.681, R2(test): 0.532
inner CV: R2(test): 0.511, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.717, R2(test): 0.579
inner CV: R2(test): 0.562, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.754, R2(test): 0.542
inner CV: R2(test): 0.565, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.731, R2(test): 0.555
inner CV: R2(test): 0.481, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.704, R2(test): 0.520
inner CV: R2(test): 0.557, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.740, R2(test): 0.349
inner CV: R2(test): 0.428, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.687, R2(test): 0.503
inner CV: R2(test): 0.524, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.712, R2(test): 0.566
inner CV: R2(test): 0.532, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.737, R2(test): 0.514
inner CV: R2(test): 0.505, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.723, R2(test): 0.497
inner CV: R2(test): 0.452, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.696, R2(test): 0.575
inner CV: R2(test): 0.509, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.710, R2(test): 0.554
inner CV: R2(test): 0.509, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.714, R2(test): 0.594
inner CV: R2(test): 0.481, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.705, R2(test): 0.630
inner CV: R2(test): 0.472, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.720, R2(test): 0.575
inner CV: R2(test): 0.485, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.722, R2(test): 0.490
inner CV: R2(test): 0.546, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.741, R2(test): 0.551
inner CV: R2(test): 0.500, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.708, R2(test): 0.627
inner CV: R2(test): 0.391, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.672, R2(test): 0.689
inner CV: R2(test): 0.519, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.705, R2(test): 0.603
inner CV: R2(test): 0.530, params: {'lasso__alpha': 0.1}, outer CV R2(train): 0.750, R2(test): 0.526
[Lasso] total result = R2(train): 0.715, R2(test): 0.553
---------- Ridge ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.550, params: {'ridge__alpha': 100}, outer CV R2(train): 0.775, R2(test): 0.602
inner CV: R2(test): 0.541, params: {'ridge__alpha': 100}, outer CV R2(train): 0.797, R2(test): 0.500
inner CV: R2(test): 0.451, params: {'ridge__alpha': 100}, outer CV R2(train): 0.757, R2(test): 0.665
inner CV: R2(test): 0.414, params: {'ridge__alpha': 100}, outer CV R2(train): 0.733, R2(test): 0.733
inner CV: R2(test): 0.556, params: {'ridge__alpha': 100}, outer CV R2(train): 0.791, R2(test): 0.568
inner CV: R2(test): 0.585, params: {'ridge__alpha': 100}, outer CV R2(train): 0.793, R2(test): 0.532
inner CV: R2(test): 0.423, params: {'ridge__alpha': 100}, outer CV R2(train): 0.740, R2(test): 0.700
inner CV: R2(test): 0.463, params: {'ridge__alpha': 100}, outer CV R2(train): 0.783, R2(test): 0.573
inner CV: R2(test): 0.547, params: {'ridge__alpha': 100}, outer CV R2(train): 0.795, R2(test): 0.505
inner CV: R2(test): 0.443, params: {'ridge__alpha': 100}, outer CV R2(train): 0.750, R2(test): 0.562
inner CV: R2(test): 0.531, params: {'ridge__alpha': 100}, outer CV R2(train): 0.779, R2(test): 0.567
inner CV: R2(test): 0.574, params: {'ridge__alpha': 100}, outer CV R2(train): 0.812, R2(test): 0.515
inner CV: R2(test): 0.579, params: {'ridge__alpha': 100}, outer CV R2(train): 0.799, R2(test): 0.527
inner CV: R2(test): 0.522, params: {'ridge__alpha': 100}, outer CV R2(train): 0.777, R2(test): 0.516
inner CV: R2(test): 0.575, params: {'ridge__alpha': 100}, outer CV R2(train): 0.794, R2(test): 0.309
inner CV: R2(test): 0.428, params: {'ridge__alpha': 100}, outer CV R2(train): 0.760, R2(test): 0.566
inner CV: R2(test): 0.514, params: {'ridge__alpha': 100}, outer CV R2(train): 0.766, R2(test): 0.553
inner CV: R2(test): 0.551, params: {'ridge__alpha': 100}, outer CV R2(train): 0.797, R2(test): 0.513
inner CV: R2(test): 0.503, params: {'ridge__alpha': 100}, outer CV R2(train): 0.800, R2(test): 0.546
inner CV: R2(test): 0.428, params: {'ridge__alpha': 100}, outer CV R2(train): 0.755, R2(test): 0.592
inner CV: R2(test): 0.505, params: {'ridge__alpha': 100}, outer CV R2(train): 0.773, R2(test): 0.544
inner CV: R2(test): 0.494, params: {'ridge__alpha': 100}, outer CV R2(train): 0.761, R2(test): 0.634
inner CV: R2(test): 0.503, params: {'ridge__alpha': 100}, outer CV R2(train): 0.776, R2(test): 0.624
inner CV: R2(test): 0.481, params: {'ridge__alpha': 100}, outer CV R2(train): 0.780, R2(test): 0.584
inner CV: R2(test): 0.513, params: {'ridge__alpha': 100}, outer CV R2(train): 0.802, R2(test): 0.537
inner CV: R2(test): 0.587, params: {'ridge__alpha': 100}, outer CV R2(train): 0.805, R2(test): 0.420
inner CV: R2(test): 0.497, params: {'ridge__alpha': 100}, outer CV R2(train): 0.757, R2(test): 0.630
inner CV: R2(test): 0.380, params: {'ridge__alpha': 100}, outer CV R2(train): 0.734, R2(test): 0.716
inner CV: R2(test): 0.471, params: {'ridge__alpha': 100}, outer CV R2(train): 0.758, R2(test): 0.668
inner CV: R2(test): 0.583, params: {'ridge__alpha': 100}, outer CV R2(train): 0.809, R2(test): 0.542
[Ridge] total result = R2(train): 0.777, R2(test): 0.568
---------- ElasticNet ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.561, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.5}, outer CV R2(train): 0.761, R2(test): 0.610
inner CV: R2(test): 0.565, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.769, R2(test): 0.470
inner CV: R2(test): 0.472, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.724, R2(test): 0.609
inner CV: R2(test): 0.401, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.693, R2(test): 0.723
inner CV: R2(test): 0.575, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.766, R2(test): 0.546
inner CV: R2(test): 0.602, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.772, R2(test): 0.504
inner CV: R2(test): 0.430, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.710, R2(test): 0.712
inner CV: R2(test): 0.486, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 1}, outer CV R2(train): 0.724, R2(test): 0.573
inner CV: R2(test): 0.539, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.772, R2(test): 0.534
inner CV: R2(test): 0.446, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.703, R2(test): 0.556
inner CV: R2(test): 0.524, params: {'elasticnet__alpha': 1, 'elasticnet__l1_ratio': 0}, outer CV R2(train): 0.775, R2(test): 0.573
inner CV: R2(test): 0.580, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.791, R2(test): 0.550
inner CV: R2(test): 0.587, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.5}, outer CV R2(train): 0.783, R2(test): 0.560
inner CV: R2(test): 0.516, params: {'elasticnet__alpha': 1, 'elasticnet__l1_ratio': 0}, outer CV R2(train): 0.773, R2(test): 0.516
inner CV: R2(test): 0.575, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.772, R2(test): 0.357
inner CV: R2(test): 0.428, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 1}, outer CV R2(train): 0.687, R2(test): 0.503
inner CV: R2(test): 0.532, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.729, R2(test): 0.577
inner CV: R2(test): 0.561, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.5}, outer CV R2(train): 0.785, R2(test): 0.532
inner CV: R2(test): 0.510, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.767, R2(test): 0.552
inner CV: R2(test): 0.455, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.716, R2(test): 0.600
inner CV: R2(test): 0.509, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 1}, outer CV R2(train): 0.710, R2(test): 0.554
inner CV: R2(test): 0.515, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.6}, outer CV R2(train): 0.744, R2(test): 0.616
inner CV: R2(test): 0.499, params: {'elasticnet__alpha': 1, 'elasticnet__l1_ratio': 0}, outer CV R2(train): 0.772, R2(test): 0.628
inner CV: R2(test): 0.477, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.738, R2(test): 0.589
inner CV: R2(test): 0.508, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.5}, outer CV R2(train): 0.782, R2(test): 0.534
inner CV: R2(test): 0.581, params: {'elasticnet__alpha': 1, 'elasticnet__l1_ratio': 0}, outer CV R2(train): 0.802, R2(test): 0.429
inner CV: R2(test): 0.502, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.727, R2(test): 0.633
inner CV: R2(test): 0.396, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.691, R2(test): 0.706
inner CV: R2(test): 0.520, params: {'elasticnet__alpha': 0.1, 'elasticnet__l1_ratio': 0.8}, outer CV R2(train): 0.722, R2(test): 0.626
inner CV: R2(test): 0.578, params: {'elasticnet__alpha': 1, 'elasticnet__l1_ratio': 0}, outer CV R2(train): 0.805, R2(test): 0.541
[ElasticNet] total result = R2(train): 0.749, R2(test): 0.567
---------- PolyRidge ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.394, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.881, R2(test): 0.605
inner CV: R2(test): 0.472, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.902, R2(test): 0.323
inner CV: R2(test): 0.381, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.866, R2(test): 0.377
inner CV: R2(test): 0.360, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.862, R2(test): 0.521
inner CV: R2(test): 0.396, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.886, R2(test): 0.443
inner CV: R2(test): 0.427, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.891, R2(test): 0.495
inner CV: R2(test): 0.277, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.835, R2(test): 0.570
inner CV: R2(test): 0.385, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.901, R2(test): 0.491
inner CV: R2(test): 0.448, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.893, R2(test): 0.304
inner CV: R2(test): 0.325, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.873, R2(test): 0.400
inner CV: R2(test): 0.378, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.886, R2(test): 0.425
inner CV: R2(test): 0.420, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.911, R2(test): 0.404
inner CV: R2(test): 0.419, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.887, R2(test): 0.518
inner CV: R2(test): 0.399, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.872, R2(test): 0.252
inner CV: R2(test): 0.428, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.900, R2(test): 0.354
inner CV: R2(test): 0.278, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.832, R2(test): 0.417
inner CV: R2(test): 0.386, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.903, R2(test): 0.526
inner CV: R2(test): 0.421, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.893, R2(test): 0.574
inner CV: R2(test): 0.339, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.892, R2(test): 0.398
inner CV: R2(test): 0.362, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.873, R2(test): 0.497
inner CV: R2(test): 0.428, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.902, R2(test): 0.361
inner CV: R2(test): 0.359, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.878, R2(test): 0.355
inner CV: R2(test): 0.363, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.866, R2(test): 0.689
inner CV: R2(test): 0.403, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.895, R2(test): 0.466
inner CV: R2(test): 0.345, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.903, R2(test): 0.379
inner CV: R2(test): 0.520, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.911, R2(test): 0.305
inner CV: R2(test): 0.399, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.873, R2(test): 0.519
inner CV: R2(test): 0.355, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.890, R2(test): 0.535
inner CV: R2(test): 0.376, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.889, R2(test): 0.530
inner CV: R2(test): 0.430, params: {'polynomialfeatures__degree': 2, 'ridge__alpha': 100}, outer CV R2(train): 0.879, R2(test): 0.432
[PolyRidge] total result = R2(train): 0.884, R2(test): 0.449
---------- RandomForest ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.540, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.942, R2(test): 0.663
inner CV: R2(test): 0.530, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.943, R2(test): 0.516
inner CV: R2(test): 0.482, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 2, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.867, R2(test): 0.434
inner CV: R2(test): 0.434, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.925, R2(test): 0.744
inner CV: R2(test): 0.571, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.953, R2(test): 0.494
inner CV: R2(test): 0.587, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.945, R2(test): 0.502
inner CV: R2(test): 0.439, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.937, R2(test): 0.685
inner CV: R2(test): 0.495, params: {'randomforestregressor__max_depth': 5, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.856, R2(test): 0.582
inner CV: R2(test): 0.510, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.944, R2(test): 0.501
inner CV: R2(test): 0.456, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.935, R2(test): 0.532
inner CV: R2(test): 0.438, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.923, R2(test): 0.697
inner CV: R2(test): 0.574, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.946, R2(test): 0.530
inner CV: R2(test): 0.589, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.950, R2(test): 0.526
inner CV: R2(test): 0.470, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.936, R2(test): 0.540
inner CV: R2(test): 0.558, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.939, R2(test): 0.519
inner CV: R2(test): 0.396, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.917, R2(test): 0.585
inner CV: R2(test): 0.485, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.929, R2(test): 0.654
inner CV: R2(test): 0.564, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.940, R2(test): 0.573
inner CV: R2(test): 0.452, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.937, R2(test): 0.546
inner CV: R2(test): 0.506, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.932, R2(test): 0.539
inner CV: R2(test): 0.531, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.944, R2(test): 0.546
inner CV: R2(test): 0.488, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.936, R2(test): 0.622
inner CV: R2(test): 0.464, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.931, R2(test): 0.708
inner CV: R2(test): 0.511, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.943, R2(test): 0.548
inner CV: R2(test): 0.521, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 50}, outer CV R2(train): 0.940, R2(test): 0.509
inner CV: R2(test): 0.555, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.944, R2(test): 0.449
inner CV: R2(test): 0.514, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.926, R2(test): 0.667
inner CV: R2(test): 0.437, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 100}, outer CV R2(train): 0.939, R2(test): 0.696
inner CV: R2(test): 0.481, params: {'randomforestregressor__max_depth': 10, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.936, R2(test): 0.602
inner CV: R2(test): 0.528, params: {'randomforestregressor__max_depth': 15, 'randomforestregressor__min_samples_leaf': 1, 'randomforestregressor__n_estimators': 75}, outer CV R2(train): 0.948, R2(test): 0.582
[RandomForest] total result = R2(train): 0.933, R2(test): 0.576
---------- SVR ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.530, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.818, R2(test): 0.678
inner CV: R2(test): 0.555, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.852, R2(test): 0.545
inner CV: R2(test): 0.538, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.896, R2(test): 0.663
inner CV: R2(test): 0.500, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.890, R2(test): 0.732
inner CV: R2(test): 0.609, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.893, R2(test): 0.590
inner CV: R2(test): 0.592, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.844, R2(test): 0.505
inner CV: R2(test): 0.467, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.879, R2(test): 0.669
inner CV: R2(test): 0.511, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.851, R2(test): 0.660
inner CV: R2(test): 0.585, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.847, R2(test): 0.514
inner CV: R2(test): 0.467, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.806, R2(test): 0.549
inner CV: R2(test): 0.557, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.827, R2(test): 0.633
inner CV: R2(test): 0.625, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.861, R2(test): 0.517
inner CV: R2(test): 0.619, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.899, R2(test): 0.533
inner CV: R2(test): 0.530, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.822, R2(test): 0.539
inner CV: R2(test): 0.582, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.847, R2(test): 0.458
inner CV: R2(test): 0.481, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.884, R2(test): 0.589
inner CV: R2(test): 0.533, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.824, R2(test): 0.639
inner CV: R2(test): 0.624, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.856, R2(test): 0.530
inner CV: R2(test): 0.528, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.887, R2(test): 0.608
inner CV: R2(test): 0.507, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.899, R2(test): 0.557
inner CV: R2(test): 0.543, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.835, R2(test): 0.563
inner CV: R2(test): 0.558, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.830, R2(test): 0.660
inner CV: R2(test): 0.499, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.885, R2(test): 0.668
inner CV: R2(test): 0.541, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.894, R2(test): 0.599
inner CV: R2(test): 0.579, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.857, R2(test): 0.597
inner CV: R2(test): 0.589, params: {'svr__C': 100, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.909, R2(test): 0.347
inner CV: R2(test): 0.502, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.817, R2(test): 0.633
inner CV: R2(test): 0.485, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.888, R2(test): 0.644
inner CV: R2(test): 0.522, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'scale', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.897, R2(test): 0.645
inner CV: R2(test): 0.602, params: {'svr__C': 10, 'svr__epsilon': 0.5, 'svr__gamma': 'auto', 'svr__kernel': 'rbf'}, outer CV R2(train): 0.845, R2(test): 0.591
[SVR] total result = R2(train): 0.861, R2(test): 0.588
---------- XGBoost ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.585, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.867, R2(test): 0.677
inner CV: R2(test): 0.586, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.890, R2(test): 0.436
inner CV: R2(test): 0.526, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.798, R2(test): 0.574
inner CV: R2(test): 0.482, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.776, R2(test): 0.734
inner CV: R2(test): 0.595, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 5, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.966, R2(test): 0.526
inner CV: R2(test): 0.630, params: {'xgbregressor__colsample_bytree': 0.8, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.880, R2(test): 0.436
inner CV: R2(test): 0.470, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.849, R2(test): 0.761
inner CV: R2(test): 0.556, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.865, R2(test): 0.606
inner CV: R2(test): 0.556, params: {'xgbregressor__colsample_bytree': 0.8, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 50, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.815, R2(test): 0.528
inner CV: R2(test): 0.483, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 5, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.949, R2(test): 0.599
inner CV: R2(test): 0.501, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.792, R2(test): 0.666
inner CV: R2(test): 0.624, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.889, R2(test): 0.519
inner CV: R2(test): 0.622, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 5, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.953, R2(test): 0.548
inner CV: R2(test): 0.547, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.875, R2(test): 0.609
inner CV: R2(test): 0.583, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.816, R2(test): 0.496
inner CV: R2(test): 0.445, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.856, R2(test): 0.550
inner CV: R2(test): 0.533, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 50, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.798, R2(test): 0.622
inner CV: R2(test): 0.611, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.887, R2(test): 0.525
inner CV: R2(test): 0.509, params: {'xgbregressor__colsample_bytree': 0.8, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.871, R2(test): 0.569
inner CV: R2(test): 0.525, params: {'xgbregressor__colsample_bytree': 0.8, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 10, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.983, R2(test): 0.561
inner CV: R2(test): 0.572, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.827, R2(test): 0.613
inner CV: R2(test): 0.545, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.862, R2(test): 0.643
inner CV: R2(test): 0.515, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.869, R2(test): 0.636
inner CV: R2(test): 0.555, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.887, R2(test): 0.622
inner CV: R2(test): 0.580, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 10, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 1.000, R2(test): 0.606
inner CV: R2(test): 0.588, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.876, R2(test): 0.563
inner CV: R2(test): 0.563, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 1.0}, outer CV R2(train): 0.868, R2(test): 0.630
inner CV: R2(test): 0.458, params: {'xgbregressor__colsample_bytree': 0.6, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 5, 'xgbregressor__n_estimators': 100, 'xgbregressor__subsample': 0.6}, outer CV R2(train): 0.945, R2(test): 0.686
inner CV: R2(test): 0.520, params: {'xgbregressor__colsample_bytree': 0.8, 'xgbregressor__learning_rate': 0.1, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 50, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.799, R2(test): 0.617
inner CV: R2(test): 0.590, params: {'xgbregressor__colsample_bytree': 1.0, 'xgbregressor__learning_rate': 0.05, 'xgbregressor__max_depth': 2, 'xgbregressor__n_estimators': 200, 'xgbregressor__subsample': 0.8}, outer CV R2(train): 0.907, R2(test): 0.598
[XGBoost] total result = R2(train): 0.874, R2(test): 0.592
---------- LightGBM ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.357, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.812, R2(test): 0.545
inner CV: R2(test): 0.390, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.799, R2(test): 0.575
inner CV: R2(test): 0.475, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.818, R2(test): 0.436
inner CV: R2(test): 0.278, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.769, R2(test): 0.684
inner CV: R2(test): 0.465, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.825, R2(test): 0.453
inner CV: R2(test): 0.469, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.817, R2(test): 0.431
inner CV: R2(test): 0.247, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.776, R2(test): 0.627
inner CV: R2(test): 0.429, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.827, R2(test): 0.377
inner CV: R2(test): 0.463, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.813, R2(test): 0.526
inner CV: R2(test): 0.366, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 100, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.715, R2(test): 0.551
inner CV: R2(test): 0.326, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 100, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.732, R2(test): 0.577
inner CV: R2(test): 0.433, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.831, R2(test): 0.462
inner CV: R2(test): 0.455, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.832, R2(test): 0.417
inner CV: R2(test): 0.412, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.825, R2(test): 0.427
inner CV: R2(test): 0.336, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.809, R2(test): 0.499
inner CV: R2(test): 0.240, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.749, R2(test): 0.548
inner CV: R2(test): 0.419, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.797, R2(test): 0.534
inner CV: R2(test): 0.397, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.847, R2(test): 0.341
inner CV: R2(test): 0.295, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.820, R2(test): 0.382
inner CV: R2(test): 0.392, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.793, R2(test): 0.441
inner CV: R2(test): 0.404, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.831, R2(test): 0.519
inner CV: R2(test): 0.374, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.784, R2(test): 0.473
inner CV: R2(test): 0.319, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.796, R2(test): 0.605
inner CV: R2(test): 0.408, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.803, R2(test): 0.569
inner CV: R2(test): 0.436, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.824, R2(test): 0.507
inner CV: R2(test): 0.378, params: {'lgbmregressor__colsample_bytree': 0.8, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.817, R2(test): 0.474
inner CV: R2(test): 0.402, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.799, R2(test): 0.566
inner CV: R2(test): 0.368, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.800, R2(test): 0.671
inner CV: R2(test): 0.341, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.763, R2(test): 0.583
inner CV: R2(test): 0.426, params: {'lgbmregressor__colsample_bytree': 0.6, 'lgbmregressor__learning_rate': 0.1, 'lgbmregressor__max_depth': 3, 'lgbmregressor__n_estimators': 200, 'lgbmregressor__subsample': 0.6}, outer CV R2(train): 0.837, R2(test): 0.488
[LightGBM] total result = R2(train): 0.802, R2(test): 0.510
---------- HistGB ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.306, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.595, R2(test): 0.559
inner CV: R2(test): 0.354, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 3, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.653, R2(test): 0.436
inner CV: R2(test): 0.407, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.652, R2(test): 0.398
inner CV: R2(test): 0.212, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.589, R2(test): 0.669
inner CV: R2(test): 0.390, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 7, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.781, R2(test): 0.462
inner CV: R2(test): 0.433, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 5, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.723, R2(test): 0.404
inner CV: R2(test): 0.181, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.391, R2(test): 0.469
inner CV: R2(test): 0.364, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 7, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.757, R2(test): 0.467
inner CV: R2(test): 0.406, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.691, R2(test): 0.493
inner CV: R2(test): 0.314, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.591, R2(test): 0.455
inner CV: R2(test): 0.314, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.552, R2(test): 0.309
inner CV: R2(test): 0.361, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.341, R2(test): 0.383
inner CV: R2(test): 0.392, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 3, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.760, R2(test): 0.435
inner CV: R2(test): 0.351, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.669, R2(test): 0.401
inner CV: R2(test): 0.268, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 3, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.656, R2(test): 0.568
inner CV: R2(test): 0.245, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.497, R2(test): 0.366
inner CV: R2(test): 0.381, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.641, R2(test): 0.457
inner CV: R2(test): 0.339, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.713, R2(test): 0.355
inner CV: R2(test): 0.239, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.331, R2(test): 0.311
inner CV: R2(test): 0.355, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.459, R2(test): 0.189
inner CV: R2(test): 0.344, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.650, R2(test): 0.534
inner CV: R2(test): 0.360, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.614, R2(test): 0.418
inner CV: R2(test): 0.265, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.569, R2(test): 0.536
inner CV: R2(test): 0.354, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 5, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.726, R2(test): 0.419
inner CV: R2(test): 0.388, params: {'histgradientboostingregressor__l2_regularization': 1.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 5, 'histgradientboostingregressor__max_iter': 100}, outer CV R2(train): 0.693, R2(test): 0.454
inner CV: R2(test): 0.360, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.405, R2(test): 0.294
inner CV: R2(test): 0.341, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.662, R2(test): 0.580
inner CV: R2(test): 0.304, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.616, R2(test): 0.591
inner CV: R2(test): 0.337, params: {'histgradientboostingregressor__l2_regularization': 0.0, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.572, R2(test): 0.463
inner CV: R2(test): 0.340, params: {'histgradientboostingregressor__l2_regularization': 0.1, 'histgradientboostingregressor__learning_rate': 0.2, 'histgradientboostingregressor__max_depth': 1, 'histgradientboostingregressor__max_iter': 200}, outer CV R2(train): 0.718, R2(test): 0.399
[HistGB] total result = R2(train): 0.609, R2(test): 0.442
---------- KNN ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.376, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.503
inner CV: R2(test): 0.400, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.378
inner CV: R2(test): 0.434, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.396
inner CV: R2(test): 0.388, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.455
inner CV: R2(test): 0.501, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.333
inner CV: R2(test): 0.405, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.544
inner CV: R2(test): 0.354, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.549
inner CV: R2(test): 0.329, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.465
inner CV: R2(test): 0.519, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.055
inner CV: R2(test): 0.318, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.411
inner CV: R2(test): 0.439, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.282
inner CV: R2(test): 0.423, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.496
inner CV: R2(test): 0.490, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.361
inner CV: R2(test): 0.419, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.339
inner CV: R2(test): 0.407, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.399
inner CV: R2(test): 0.282, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.416
inner CV: R2(test): 0.430, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.437
inner CV: R2(test): 0.444, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.534
inner CV: R2(test): 0.376, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.404
inner CV: R2(test): 0.401, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.497
inner CV: R2(test): 0.408, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.298
inner CV: R2(test): 0.396, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.423
inner CV: R2(test): 0.352, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.602
inner CV: R2(test): 0.460, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.322
inner CV: R2(test): 0.381, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.294
inner CV: R2(test): 0.501, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.339
inner CV: R2(test): 0.336, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 10, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.606
inner CV: R2(test): 0.342, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 5, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.548
inner CV: R2(test): 0.377, params: {'kneighborsregressor__metric': 'manhattan', 'kneighborsregressor__n_neighbors': 7, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.551
inner CV: R2(test): 0.491, params: {'kneighborsregressor__metric': 'euclidean', 'kneighborsregressor__n_neighbors': 3, 'kneighborsregressor__p': 1, 'kneighborsregressor__weights': 'distance'}, outer CV R2(train): 1.000, R2(test): 0.257
[KNN] total result = R2(train): 1.000, R2(test): 0.416
---------- MLP ----------
params, R2(train), R2(test)
inner CV: R2(test): 0.130, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.834, R2(test): 0.556
inner CV: R2(test): 0.239, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (100,), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.931, R2(test): 0.210
inner CV: R2(test): 0.207, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.877, R2(test): 0.468
inner CV: R2(test): 0.172, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.774, R2(test): 0.513
inner CV: R2(test): 0.307, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.890, R2(test): 0.338
inner CV: R2(test): 0.243, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50,), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.684, R2(test): 0.285
inner CV: R2(test): 0.033, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.747, R2(test): 0.607
inner CV: R2(test): 0.134, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.631, R2(test): 0.333
inner CV: R2(test): 0.357, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.904, R2(test): 0.157
inner CV: R2(test): 0.131, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.654, R2(test): 0.215
inner CV: R2(test): 0.282, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.850, R2(test): 0.426
inner CV: R2(test): 0.219, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.897, R2(test): 0.013
inner CV: R2(test): 0.291, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.550, R2(test): 0.341
inner CV: R2(test): 0.175, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.784, R2(test): 0.510
inner CV: R2(test): 0.288, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.910, R2(test): -0.053
inner CV: R2(test): -0.006, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.446, R2(test): -1.167
inner CV: R2(test): 0.174, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.559, R2(test): 0.057
inner CV: R2(test): 0.246, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.630, R2(test): 0.167
inner CV: R2(test): 0.202, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.867, R2(test): 0.334
inner CV: R2(test): 0.189, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.937, R2(test): 0.354
inner CV: R2(test): 0.165, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.708, R2(test): 0.110
inner CV: R2(test): 0.165, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.762, R2(test): 0.368
inner CV: R2(test): 0.161, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.01}, outer CV R2(train): 0.800, R2(test): -0.122
inner CV: R2(test): 0.244, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.911, R2(test): 0.328
inner CV: R2(test): 0.136, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.729, R2(test): 0.373
inner CV: R2(test): 0.360, params: {'mlpregressor__alpha': 0.01, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.740, R2(test): 0.228
inner CV: R2(test): 0.196, params: {'mlpregressor__alpha': 0.001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.510, R2(test): 0.316
inner CV: R2(test): 0.068, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.709, R2(test): 0.355
inner CV: R2(test): 0.137, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.764, R2(test): 0.457
inner CV: R2(test): 0.307, params: {'mlpregressor__alpha': 0.0001, 'mlpregressor__hidden_layer_sizes': (50, 20), 'mlpregressor__learning_rate_init': 0.001}, outer CV R2(train): 0.756, R2(test): 0.261
[MLP] total result = R2(train): 0.758, R2(test): 0.245